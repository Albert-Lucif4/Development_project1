// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.12
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// d:\opendds\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:366


#include "instructionTypeSupportC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "instructionTypeSupportC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// d:\opendds\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_cs.cpp:48
TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for instruction::instructTypeSupport.

instruction::instructTypeSupport_ptr
TAO::Objref_Traits<instruction::instructTypeSupport>::duplicate (
    instruction::instructTypeSupport_ptr p)
{
  return instruction::instructTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<instruction::instructTypeSupport>::release (
    instruction::instructTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

instruction::instructTypeSupport_ptr
TAO::Objref_Traits<instruction::instructTypeSupport>::nil (void)
{
  return instruction::instructTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<instruction::instructTypeSupport>::marshal (
    const instruction::instructTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



instruction::instructTypeSupport::instructTypeSupport (void)
{}

instruction::instructTypeSupport::~instructTypeSupport (void)
{
}

instruction::instructTypeSupport_ptr
instruction::instructTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return instructTypeSupport::_duplicate (
      dynamic_cast<instructTypeSupport_ptr> (_tao_objref));
}

instruction::instructTypeSupport_ptr
instruction::instructTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return instructTypeSupport::_duplicate (
      dynamic_cast<instructTypeSupport_ptr> (_tao_objref));
}

instruction::instructTypeSupport_ptr
instruction::instructTypeSupport::_nil (void)
{
  return 0;
}

instruction::instructTypeSupport_ptr
instruction::instructTypeSupport::_duplicate (instructTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
instruction::instructTypeSupport::_tao_release (instructTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
instruction::instructTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:instruction/instructTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* instruction::instructTypeSupport::_interface_repository_id (void) const
{
  return "IDL:instruction/instructTypeSupport:1.0";
}

::CORBA::Boolean
instruction::instructTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// d:\opendds\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_cs.cpp:48
TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for instruction::instructDataWriter.

instruction::instructDataWriter_ptr
TAO::Objref_Traits<instruction::instructDataWriter>::duplicate (
    instruction::instructDataWriter_ptr p)
{
  return instruction::instructDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<instruction::instructDataWriter>::release (
    instruction::instructDataWriter_ptr p)
{
  ::CORBA::release (p);
}

instruction::instructDataWriter_ptr
TAO::Objref_Traits<instruction::instructDataWriter>::nil (void)
{
  return instruction::instructDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<instruction::instructDataWriter>::marshal (
    const instruction::instructDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



instruction::instructDataWriter::instructDataWriter (void)
{}

instruction::instructDataWriter::~instructDataWriter (void)
{
}

instruction::instructDataWriter_ptr
instruction::instructDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return instructDataWriter::_duplicate (
      dynamic_cast<instructDataWriter_ptr> (_tao_objref));
}

instruction::instructDataWriter_ptr
instruction::instructDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return instructDataWriter::_duplicate (
      dynamic_cast<instructDataWriter_ptr> (_tao_objref));
}

instruction::instructDataWriter_ptr
instruction::instructDataWriter::_nil (void)
{
  return 0;
}

instruction::instructDataWriter_ptr
instruction::instructDataWriter::_duplicate (instructDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
instruction::instructDataWriter::_tao_release (instructDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
instruction::instructDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:instruction/instructDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* instruction::instructDataWriter::_interface_repository_id (void) const
{
  return "IDL:instruction/instructDataWriter:1.0";
}

::CORBA::Boolean
instruction::instructDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// d:\opendds\ace_wrappers\tao\tao_idl\be\be_visitor_interface\interface_cs.cpp:48
TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for instruction::instructDataReader.

instruction::instructDataReader_ptr
TAO::Objref_Traits<instruction::instructDataReader>::duplicate (
    instruction::instructDataReader_ptr p)
{
  return instruction::instructDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<instruction::instructDataReader>::release (
    instruction::instructDataReader_ptr p)
{
  ::CORBA::release (p);
}

instruction::instructDataReader_ptr
TAO::Objref_Traits<instruction::instructDataReader>::nil (void)
{
  return instruction::instructDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<instruction::instructDataReader>::marshal (
    const instruction::instructDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



instruction::instructDataReader::instructDataReader (void)
{}

instruction::instructDataReader::~instructDataReader (void)
{
}

instruction::instructDataReader_ptr
instruction::instructDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return instructDataReader::_duplicate (
      dynamic_cast<instructDataReader_ptr> (_tao_objref));
}

instruction::instructDataReader_ptr
instruction::instructDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return instructDataReader::_duplicate (
      dynamic_cast<instructDataReader_ptr> (_tao_objref));
}

instruction::instructDataReader_ptr
instruction::instructDataReader::_nil (void)
{
  return 0;
}

instruction::instructDataReader_ptr
instruction::instructDataReader::_duplicate (instructDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
instruction::instructDataReader::_tao_release (instructDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
instruction::instructDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:instruction/instructDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* instruction::instructDataReader::_interface_repository_id (void) const
{
  return "IDL:instruction/instructDataReader:1.0";
}

::CORBA::Boolean
instruction::instructDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

